<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WLSHARE</title>
  <icon>https://www.gravatar.com/avatar/0731094a53d226f5ba52b970ac58196c</icon>
  <subtitle>WLSHARE</subtitle>
  <link href="http://wyqhkhhk.github.io/atom.xml" rel="self"/>
  
  <link href="http://wyqhkhhk.github.io/"/>
  <updated>2021-12-20T09:35:16.209Z</updated>
  <id>http://wyqhkhhk.github.io/</id>
  
  <author>
    <name>Marvin</name>
    <email>sdpuwqq@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>浅谈医疗器械GMP</title>
    <link href="http://wyqhkhhk.github.io/2021/12/20/%E6%B5%85%E8%B0%88%E5%8C%BB%E7%96%97%E5%99%A8%E6%A2%B0GMP/"/>
    <id>http://wyqhkhhk.github.io/2021/12/20/%E6%B5%85%E8%B0%88%E5%8C%BB%E7%96%97%E5%99%A8%E6%A2%B0GMP/</id>
    <published>2021-12-20T06:14:41.000Z</published>
    <updated>2021-12-20T09:35:16.209Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浅谈医疗器械GMP"><a href="#浅谈医疗器械GMP" class="headerlink" title="浅谈医疗器械GMP"></a>浅谈医疗器械GMP</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>​    本次发言，是收集了医疗器械行业中实施YY0287 idt ISO13485和医疗器械GMP试点的一些情况，从宏观上谈谈有关学习、贯彻《<a href="https://www.nmpa.gov.cn/xxgk/fgwj/bmgzh/20140730190001932.html">医疗器械生产质量管理规范</a>(GMP)》的问题</p><h3 id="关于GMP"><a href="#关于GMP" class="headerlink" title="关于GMP"></a>关于GMP</h3><p>​    GMP是英文名Good Manufacturing Practices for Drugs的缩写。GMP可以直译为“优良的生产实践”；当然这里我们主要指的是药品(包括医疗器械)的生产。食品、化妆品等也应参照GMP进行生产，由于“GMP’’已像“TV’’等外来词缩写习惯应用．除官方文件外，大家已约定俗成，成为国际间通用词汇。<br>​     在国际上，GMP已成为药品生产和质量管理的基本准则，是一套系统的、科学的管理制度。实施GMP，不仅仅通过最终产品的检验来证明达到质量要求，而是在药品生产的全过程中实施科学的全面管理和严密的监控来获得预期质量。实施GMP可以防止生产过程中药品的污染、混药和错药。GMP是药品生产的一种全面质量管理制度.</p><h3 id="GMP分类"><a href="#GMP分类" class="headerlink" title="GMP分类"></a>GMP分类</h3><ol><li><p>从GMP适用范围来看，现行的GMP可分为三类：</p><ul><li><p>①具有国际性质的GMP。如WHO的GMP，北欧七国自由贸易联盟制定的PIC-GMP（PIC为Pharmaceutical lnspection Convention即药品生产检查互相承认公约),东南亚国家联盟的GMP等。</p></li><li><p>②国家权力机构颁布的GMP。如中华人民共和国卫生部及后来的国家药品监督管理局、美国FDA、英国卫生和社会保险部、日本厚生省等政府机关制订的GMP。</p></li><li><p>③工业组织制订的GMP。如美国制药工业联合会制订的，标准不低于美国政府制定的GMP，中国医药工业公司制订的GMP实施指南，甚至还包括药厂或公司自己制订的。</p></li></ul></li><li><p>从GMP制度的性质来看，又可分为两类：</p><ul><li><p> ①将GMP作为法典规定。  如美国、日本、中国的GMP。</p></li><li><p> ②将GMP作为建议性的规定，有些GMP起到对药品生产和质量管理的指导作用； 如联合国WHO(国际卫生组识)的GMP。</p></li></ul></li><li><p> WHO的“国际贸易药品质量签证体制”中已规定出口药品厂家必须按照GMP的规定进行生产，并接受进口国药品监督管理部门按GMP规定进行的监督.这样,按照GMP要求生产药品已成为药品进入国际市场的先决条件，GMP也就成为国际性的药品质量控制和检查的依据。</p></li><li><p>  总的来说，各国按GMP要求进行药品生产管理和质量管理已是大势所趋；各国的GMP内容基本上是一致的，但也各有特点。对特殊品种，如大输液也可单独制订大输液的GMP(LVP—GMP，Large Volume Parenteral-GMP)。实践证明，GMP是行之有效的科学化、系统化的管理制度，对保证药品质量起到积极作用,已经得到国际上的普遍承认。</p></li><li><p>  为了确保医疗器械质量，适应我国改革开放形势的需要，在医疗器械领域建立完整的质量保证系统,推行GMP制度已是当前迫在眉前的任务。</p></li></ol><h3 id="GMP修订"><a href="#GMP修订" class="headerlink" title="GMP修订"></a>GMP修订</h3><ul><li>2004年3月正式启动规范的编写</li><li>2006年5月，《医疗器械生产质量管理规范》总则上网征求意见。</li><li>2006年7月，对《医疗器械质量管理规范无菌医疗器械实施指南》与《医疗器械质量管理规范植入性医疗器械实施指南》下发各省并上网公开征求意见。</li><li>2006年8月，试用文本定稿。</li><li>2006年12月，对无菌和植入性医疗器械生产企业质量管理体系规范试点工作正式启动。涉及血袋、输液器、输注泵、血浆分离器、骨科植入材料、心脏起搏器、产包、导管、宫内节育器、羟基磷灰石植入材料10个品种，确定上海、浙江、广东、陕西省（市）作为无菌医疗器械企业试点地区，北京、江苏、四川、天津省（市）作为植入性医疗器械企业试点地区。</li><li>2008年1月，试点工作总结。</li><li>2008年05月30日，再次上网征求《医疗器械生产质量管理规范》等8个修改稿意见。</li><li>国家将对医疗器械生产企业实施GMP检查，已没有悬念。</li></ul><h3 id="GMP的实质认识"><a href="#GMP的实质认识" class="headerlink" title="GMP的实质认识"></a>GMP的实质认识</h3><ul><li><p>《医疗器械生产质量管理规范》是政府对医疗器械生产企业质量管理体系进行监管的准则。</p><p>从规范的适用范围看：</p><ul><li><p>医疗器械生产企业申领、换发《医疗器械生产许可证》，以及企业生产范围、生产地址变更时，企业可以自愿申请医疗器械生产质量管理规范的检查。</p></li><li><p>医疗器械产品注册前进行医疗器械生产质量管理规范的检查，合格后方可注册。</p><p>在注册进行体系考核时，按照《规范》可对各类医疗器械实施全过程质量体系监督管理。</p></li><li><p>医疗器械生产企业的监督检查（包括监督抽查、飞行检查）、生产企业日常监督检查，也将按照《规范》要求进行。</p></li></ul></li><li><p>  GMP是企业进行质量管理体系建设的规范</p></li><li><p>GMP指明了质量管理体系建设的技术要求和法规要求。</p></li><li><p> 政府管理部门将按GMP文件对企业的质量管理体系进行检查。</p></li><li><p>  是促使中国医疗器械生产企业及其产品走向世界的助推剂。</p></li><li><p>中国的GMP与国际上的体系要求是相通的。</p></li></ul><p>GMP的实施使中国的企业的质量管理体系更加规范、产品质量更有保证。   医疗器械企业有的经历了“全面质量    管理”、“ISO9000/13485”、“无菌医疗器械生产质量管理实施细则” 和“医疗器械GMP”(试点)。</p><ul><li>实施“全面质量管理”是企业初级阶段寻求一种企业质量管理的方法，这是试验性的；</li><li>实施“ISO9000/13485”，是企业引入现代化管理技术，进一步提高和完善质量管理技术与国际接轨，这是意愿性的；</li><li>实施“医疗器械GMP”使企业的生产质量管理符合法规要求，确保制造的医疗器械产品安全有效，这是强制性的。</li></ul><p> “全面质量管理”、“ISO13485”、“无菌医疗器械生产质量管理实施细则”、“医疗器械GMP”。不只是对企业质量管理的一种要求，应该视为是一种理念，是一种方法，是企业必须遵循的组合标准。</p><ul><li>  但是，“ISO13485” 是一个通用标准，要求比较模糊，是宏观性的。</li><li>《医疗器械GMP 》紧扣“ISO13485”，</li><li>《医疗器械GMP 》的下层次《实施细则》针对相应的产品提出具体要求，使企业质量管理体系要求更趋清晰，更具操作性。</li><li> 所以《医疗器械GMP》给企业提供了一种优良的医疗器械企业管理方法。</li></ul><h3 id="企业应如何应对GMP检查"><a href="#企业应如何应对GMP检查" class="headerlink" title="企业应如何应对GMP检查"></a>企业应如何应对GMP检查</h3><p>coming soon……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;浅谈医疗器械GMP&quot;&gt;&lt;a href=&quot;#浅谈医疗器械GMP&quot; class=&quot;headerlink&quot; title=&quot;浅谈医疗器械GMP&quot;&gt;&lt;/a&gt;浅谈医疗器械GMP&lt;/h2&gt;&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="质量管理" scheme="http://wyqhkhhk.github.io/categories/%E8%B4%A8%E9%87%8F%E7%AE%A1%E7%90%86/"/>
    
    <category term="GMP" scheme="http://wyqhkhhk.github.io/categories/%E8%B4%A8%E9%87%8F%E7%AE%A1%E7%90%86/GMP/"/>
    
    
    <category term="GMP" scheme="http://wyqhkhhk.github.io/tags/GMP/"/>
    
  </entry>
  
  <entry>
    <title>git pull error</title>
    <link href="http://wyqhkhhk.github.io/2021/12/13/git-pull-error/"/>
    <id>http://wyqhkhhk.github.io/2021/12/13/git-pull-error/</id>
    <published>2021-12-13T12:26:18.000Z</published>
    <updated>2021-12-20T01:28:16.056Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git-pull-报错"><a href="#git-pull-报错" class="headerlink" title="git pull 报错"></a>git pull 报错</h2><h4 id="本地git拉取时-报错："><a href="#本地git拉取时-报错：" class="headerlink" title="本地git拉取时 报错："></a>本地git拉取时 报错：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">error: Your <span class="built_in">local</span> changes to the following files would be overwritten by merge:</span><br><span class="line"></span><br><span class="line"><span class="comment">####</span></span><br><span class="line"><span class="comment">####</span></span><br><span class="line"><span class="comment">####</span></span><br><span class="line"></span><br><span class="line">Please commit your changes or stash them before you merge.</span><br><span class="line">Aborting</span><br><span class="line">Updating 3ffed04..fae751e</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="提示可以看到：您不能与本地修改合并。Git-保护您免于丢失潜在的重要更改"><a href="#提示可以看到：您不能与本地修改合并。Git-保护您免于丢失潜在的重要更改" class="headerlink" title="提示可以看到：您不能与本地修改合并。Git 保护您免于丢失潜在的重要更改"></a>提示可以看到：您不能与本地修改合并。Git 保护您免于丢失潜在的重要更改</h4><h4 id="有三种解决方案："><a href="#有三种解决方案：" class="headerlink" title="有三种解决方案："></a>有三种解决方案：</h4><ol><li><p>使用提交更改</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;My message&quot;</span></span><br></pre></td></tr></table></figure><p>进行合并，然后拉到本地</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git stash pop</span><br></pre></td></tr></table></figure></li><li><p>丢弃本地更改</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reset --hard</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">git checkout -t -f remote/branch</span><br></pre></td></tr></table></figure><p>然后拉取到本地</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure></li><li><p>放弃本地的文件更改</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout filename</span><br></pre></td></tr></table></figure></li></ol><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><ol><li><a href="https://stackoverflow.com/questions/15745045/how-do-i-resolve-git-saying-commit-your-changes-or-stash-them-before-you-can-me">How do I resolve git saying “Commit your changes or stash them before you can merge”?</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;git-pull-报错&quot;&gt;&lt;a href=&quot;#git-pull-报错&quot; class=&quot;headerlink&quot; title=&quot;git pull 报错&quot;&gt;&lt;/a&gt;git pull 报错&lt;/h2&gt;&lt;h4 id=&quot;本地git拉取时-报错：&quot;&gt;&lt;a href=&quot;#本地git</summary>
      
    
    
    
    <category term="Git教程" scheme="http://wyqhkhhk.github.io/categories/Git%E6%95%99%E7%A8%8B/"/>
    
    <category term="git拉取错误" scheme="http://wyqhkhhk.github.io/categories/Git%E6%95%99%E7%A8%8B/git%E6%8B%89%E5%8F%96%E9%94%99%E8%AF%AF/"/>
    
    
    <category term="git" scheme="http://wyqhkhhk.github.io/tags/git/"/>
    
    <category term="error" scheme="http://wyqhkhhk.github.io/tags/error/"/>
    
  </entry>
  
  <entry>
    <title>8D分析</title>
    <link href="http://wyqhkhhk.github.io/2021/12/13/8D%E5%88%86%E6%9E%90/"/>
    <id>http://wyqhkhhk.github.io/2021/12/13/8D%E5%88%86%E6%9E%90/</id>
    <published>2021-12-13T01:05:40.000Z</published>
    <updated>2021-12-13T09:42:29.902Z</updated>
    
    <content type="html"><![CDATA[<h2 id="8D-方法"><a href="#8D-方法" class="headerlink" title="8D 方法"></a>8D 方法</h2><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>团队方法</li><li>系统性解决问题</li><li>以事实为基础的问题解析技术</li><li>激励机制</li></ul><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><ul><li>8D系统方法立足于揭示问题的根源，期望从根本上解决问题，找出长期对策，防止问题的再次发生。</li></ul><h2 id="问题意识"><a href="#问题意识" class="headerlink" title="问题意识"></a>问题意识</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><ul><li>现状与 预期状态或常规状态的差距</li></ul><h3 id="主动发现问题的方法"><a href="#主动发现问题的方法" class="headerlink" title="主动发现问题的方法"></a>主动发现问题的方法</h3><ul><li><table><thead><tr><th>组合应用</th><th align="center">人</th><th align="center">机</th><th align="center">料</th><th align="center">法</th><th align="center">环</th><th align="center">测</th></tr></thead><tbody><tr><td><strong>不合理</strong></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td><strong>不均衡</strong></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td><strong>浪费</strong></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table></li><li><p>七大任务法</p><ul><li>Q–品质</li><li>C–成本</li><li>D–交期</li><li>S–服务</li><li>S–安全</li><li>P–效率</li><li>M–士气</li></ul></li><li><p>主动风险分析：FMEA</p><ul><li>统计方法<ul><li>市场分析差异</li><li>标杆对比差异</li><li>点检表发现</li><li>排列图识别</li><li>直方图分析</li><li>趋势图分析</li><li>控制图失控</li><li>过程能力下降</li></ul></li></ul></li></ul><h2 id="8D基本流程"><a href="#8D基本流程" class="headerlink" title="8D基本流程"></a>8D基本流程</h2><table><thead><tr><th>D0</th><th align="left">准备8D 过程</th><th>根据现象评估8D过程是否需要。 如果有必要，采取紧急反应行动来保护顾客，并开始8D过程</th></tr></thead><tbody><tr><td><strong>D1</strong></td><td align="left">建立8D小组</td><td>建立一个小组来解决问题和执行修正计划，小组成员应具有过程和/或产品知识、分配的时间、权威和需要的技能。</td></tr><tr><td><strong>D2</strong></td><td align="left">描述问题</td><td>通过‘什么出现什么问题’来描述内部/外部的问题，用量化的术语细化问题</td></tr><tr><td><strong>D3</strong></td><td align="left">临时性行动</td><td>定义、验证和执行临时控制行动以将问题的影响同内部和外部的顾客隔离开。临时行动将执行到永久修正计划采用为止。证实临时行动的有效性.。</td></tr><tr><td><strong>D4</strong></td><td align="left">确定根本原因</td><td>通过测试每一个根本原因对问题描述来隔离和验证根本原因。同时隔离和验证根本原因的影响能在过程中被检测和控制的地方。</td></tr><tr><td><strong>D5</strong></td><td align="left">选择和验证永久纠正措施</td><td>选取最佳的的永久修正行动来去除根本原因。同时也选取最佳的永久修正行动来控制根本原因的影响。验证执行两个决定是有效的并且不会引起不需要的影响。</td></tr><tr><td><strong>D6</strong></td><td align="left">实施和证实永久纠正措施</td><td>计划和执行选取的永久修正行动。去除临时行动。验证永久修正行动并监控长期的效果。</td></tr><tr><td><strong>D7</strong></td><td align="left">防止问题再次发生</td><td>修改必需的系统包括政策、程序等来防止同一或相似问题的再发生。如果需要对系统改进提出建议，并将学到的技术教训形成文件。</td></tr><tr><td><strong>D8</strong></td><td align="left">表彰小组和个人</td><td>完成小组的经验。真诚地表彰小组和个人的贡献。</td></tr></tbody></table><h3 id="D0：准备8D"><a href="#D0：准备8D" class="headerlink" title="D0：准备8D"></a>D0：准备8D</h3><h4 id="紧急反应行动ERA"><a href="#紧急反应行动ERA" class="headerlink" title="紧急反应行动ERA"></a>紧急反应行动ERA</h4><ul><li>通常由领导（对问题负责和授权解决问题的人）决定是否执行ERA</li><li>有时需要不止一个ERA来完全保护我们的顾客</li><li>为确保ERA能保护顾客，需要验证ER</li><li>ERA可能很难用测量验证，因为它是以常识为基础</li></ul><h4 id="8D的适用标准"><a href="#8D的适用标准" class="headerlink" title="8D的适用标准"></a>8D的适用标准</h4><ul><li>症状已被定义和量化（重要）</li><li>原因不知道（重要）</li><li>症状的复杂性超出了个人能解决的范围（重要）</li><li>想要找出根本原因并预防再次发生</li></ul><h4 id="症状和问题的区别"><a href="#症状和问题的区别" class="headerlink" title="症状和问题的区别"></a>症状和问题的区别</h4><ul><li>症状是一个显示存在一个或多个问题的可测量的事件或结果</li><li>问题是指同期望有偏差或任何由未知原因引起的有害的后果</li><li>症状是问题的显示</li><li>只有症状才能被测量和量化</li><li>当症状不能被测量时，可能没有足够的信息和有效的理由来执行8D</li><li>在其它情况下，小组可能不得不开发可测量的方法来量化症状：佩恩特图、趋势图、帕特图</li></ul><h3 id="D1：建立小组"><a href="#D1：建立小组" class="headerlink" title="D1：建立小组"></a>D1：建立小组</h3><blockquote><p>核心要求：一组具有所需特征（能力、资源、权限）和动力的人员</p></blockquote><h4 id="小组成员角色："><a href="#小组成员角色：" class="headerlink" title="小组成员角色："></a>小组成员角色：</h4><ul><li>组长：制定会议和小组活动的日程；组织分配工作；监控日程；后勤保障；向上汇报。</li><li>时间管理员：协助负责人管理小组的时间；分配时间；登记进度。</li><li>记录员：在会议中重新叙述和记录小组的决定；书写和分发会议纪要；使小组的决定可见；管理小组的文件；确保每一个小组成员都有机会做贡献。</li><li>协调员：集中于小组维护；沟通、联络；解决冲突；在每个8D阶段提出组织方面建议。</li><li>成员：找出答案；执行行动。</li></ul><h4 id="小组操作程序"><a href="#小组操作程序" class="headerlink" title="小组操作程序"></a>小组操作程序</h4><ul><li>Ø召集形式</li><li>Ø会议形式</li><li>Ø决策流程</li><li>Ø任务量记录程序</li></ul><h4 id="本阶段检查表："><a href="#本阶段检查表：" class="headerlink" title="本阶段检查表："></a>本阶段检查表：</h4><ul><li>是否确定了本小组人员?（资质）</li><li>是否选举了组长?（谁能当组长？）</li><li>是否全体人员都具备所需的解决问题的知识和工作经验?</li><li>小组成员是否都具有参与的动力和时间？</li><li>小组人数是否合适?</li><li>是否有必要的外援人员来协助解决问题?</li><li>小组成员的专业技术组成是否全面?</li><li>小组成员是否确定他们的工作关系：例如是否了解小组的目标、各成员的角色和他们要共同完成的任务?</li><li>小组是否已确定解决问题的时间?</li><li>是否对小组进行了动员？</li></ul><h3 id="D2：描述问题"><a href="#D2：描述问题" class="headerlink" title="D2：描述问题"></a>D2：描述问题</h3><blockquote><p>描述问题分为：问题陈述、问题描述</p></blockquote><h4 id="问题陈述："><a href="#问题陈述：" class="headerlink" title="问题陈述："></a>问题陈述：</h4><ul><li>问题陈述是确定未知原因引起的问题的对象和缺陷的简单、简明的陈述</li><li>例如：:see_no_evil:出现了 :question:问题</li><li>:question:：是缺陷</li><li>:see_no_evil:：是对象</li></ul><p> 一旦对象和缺陷建立了，下一步是精炼他们</p><ul><li>问“ :see_no_evil:为什么出现:question:缺陷”来精炼初步的问题</li><li>继续问“为什么”直到不能肯定回答。如果原因未知并且需要找到根本原因，最后一个对象和缺陷就是问题陈述</li><li>再三地问“那个 :see_no_evil: 为什么出现:question:缺陷”的过程称为重复问为什么技巧</li></ul><h4 id="问题描述和问题陈述区别"><a href="#问题描述和问题陈述区别" class="headerlink" title="问题描述和问题陈述区别"></a>问题描述和问题陈述区别</h4><ul><li>问题描述按照问题是什么和问题不是什么定义问题 的边界</li><li>问题陈述提供基本事实，而问题描述提供需要的细节来找出根本原因</li><li>问题描述帮助小组缩小研究的范围</li><li>使用是/不是表格</li></ul><h4 id="问题的分解"><a href="#问题的分解" class="headerlink" title="问题的分解"></a>问题的分解</h4><ul><li><p>问题陈述</p><ul><li>问题1<ul><li>更小的问题</li></ul></li><li>问题2<ul><li>更小的问题</li></ul></li></ul></li><li><p>问题的分解方向</p></li></ul><h4 id="因果图用于寻找原因"><a href="#因果图用于寻找原因" class="headerlink" title="因果图用于寻找原因"></a>因果图用于寻找原因</h4><img src="https://s2.loli.net/2021/12/13/Hx7Tp1BjCbLd9ng.png" alt="鱼骨图" style="zoom:75%;" /><h3 id="D3：开发临时控制行动（ICA）"><a href="#D3：开发临时控制行动（ICA）" class="headerlink" title="D3：开发临时控制行动（ICA）"></a>D3：开发临时控制行动（ICA）</h3><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><ul><li>D3 开发直到永久改善计划执行以前使用的临时控制行动。（为何不叫纠正措施？）</li><li>ICA是针对问题而不是针对根本原因。（如增加检查、增加防护、手工操作等）</li><li>ICA 将问题的影响同内部和外部的顾客隔开，保证问题不会再影响到顾客。</li><li>在D3 ，ICA必须被验证</li></ul><h4 id="何时不需要ICA"><a href="#何时不需要ICA" class="headerlink" title="何时不需要ICA"></a>何时不需要ICA</h4><ol><li>如果根本原因已知；</li><li>ERA能够继续可靠保护顾客；（成本、效率可行）</li></ol><h4 id="开发ICA的四个步骤"><a href="#开发ICA的四个步骤" class="headerlink" title="开发ICA的四个步骤"></a>开发ICA的四个步骤</h4><ol><li>选择ICA：因为ICA会增加成本，在选择ICA前要仔细考虑</li><li>验证ICA：在执行ICA前需要验证ICA能够起作用，保护顾客不受影响且不产生新的问题</li><li>执行ICA：执行PDCA</li><li>证实ICA：证明ICA满足要求并且没有产生新的问题，内部做或顾客做</li></ol><h4 id="利用因果图寻找对策"><a href="#利用因果图寻找对策" class="headerlink" title="利用因果图寻找对策"></a>利用因果图寻找对策</h4><h3 id="D4：定义和验证根本原因和问题出逃点"><a href="#D4：定义和验证根本原因和问题出逃点" class="headerlink" title="D4：定义和验证根本原因和问题出逃点"></a>D4：定义和验证根本原因和问题出逃点</h3><h4 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h4><ul><li>D4 根据问题描述测试每一个根本原因从而隔离和验证根本原因</li><li>隔离和验证过程中根本原因的影响能够被检测和控制的地方（逃出点）</li><li>D4阶段的工作是8D 过程的核心：在此阶段中心从观测改变到结论</li></ul><h4 id="什么是根本原因"><a href="#什么是根本原因" class="headerlink" title="什么是根本原因"></a>什么是根本原因</h4><ul><li>可能原因：在原因结果图上被确定的描述一种结果可能发生的任何原因</li><li>最有可能原因：以可得到的数据为基础，最能描述问题的原因</li><li>根本原因：验证过的解释问题的原因，通过让问题来和去来主动和被动验证</li></ul><h4 id="确定根本原因"><a href="#确定根本原因" class="headerlink" title="确定根本原因"></a>确定根本原因</h4><ul><li>怎样确定根本原因<ul><li>评审问题描述（是/不是分析）</li><li>完成变化-引起情况的比较分析</li><li>展开根本原因推测</li><li>针对问题描述的试验推测</li></ul></li><li>验证了最有可能原因后才能得到根本原因</li><li><a href="https://www.docin.com/p-482206867.html">《问题解决工作表》</a>（Ford）：帮助集中努力和管理和解释收集的信息<ul><li>问题描述</li><li>比较分析</li><li>根本原因理论</li><li>根本原因理论运行</li></ul></li></ul><h4 id="验证根本原因"><a href="#验证根本原因" class="headerlink" title="验证根本原因"></a>验证根本原因</h4><ul><li>确定了最可能原因后，验证它引起了问题</li><li>​            </li></ul><h4 id="确定和验证问题逃出点"><a href="#确定和验证问题逃出点" class="headerlink" title="确定和验证问题逃出点"></a>确定和验证问题逃出点</h4><ul><li>确定了根本原因后，需要确定问题逃出点</li><li>理解问题是怎样逃出而到达了顾客和确定问题逃出点</li><li>如果控制点能够发现问题，控制点就是被验证的逃出点</li></ul><h3 id="D5：选择-验证永久性纠正措施（PCA）"><a href="#D5：选择-验证永久性纠正措施（PCA）" class="headerlink" title="D5：选择/验证永久性纠正措施（PCA）"></a>D5：选择/验证永久性纠正措施（PCA）</h3><ul><li><p>PCA：是消除问题的根本原因的最好行动。两种 PCA</p><ul><li><p>​    Ø去除根本原因的 PCA：（产生原因）</p></li><li><p>​    Ø控制根本原因的影响的 PCA：（流出原因）</p></li></ul></li></ul><h3 id="D6：执行和证实PCA"><a href="#D6：执行和证实PCA" class="headerlink" title="D6：执行和证实PCA"></a>D6：执行和证实PCA</h3><h4 id="PCA执行计划要素"><a href="#PCA执行计划要素" class="headerlink" title="PCA执行计划要素"></a>PCA执行计划要素</h4><ul><li>规定目标：（时间、成本、结果、安全性等）</li><li>确定需要满足的标准：（如各步的SOP，检查要领等）</li><li>确定关键步骤：最重要部分，关键步骤的任何问题和延误都可能影响其它步骤或项目结果</li></ul><h4 id="问题的预防"><a href="#问题的预防" class="headerlink" title="问题的预防"></a>问题的预防</h4><ul><li>制定流程图，识别关键步骤</li><li>建议按类似 PFMEA方法，对每一过程的 5M1E可能的风险和障碍进行分析</li><li>对风险仍然存在的过程考虑后备计划：何时启动，谁负责……</li></ul><h3 id="D7：预防再次发生"><a href="#D7：预防再次发生" class="headerlink" title="D7：预防再次发生"></a>D7：预防再次发生</h3><h4 id="方法：需要回答下面的问题。"><a href="#方法：需要回答下面的问题。" class="headerlink" title="方法：需要回答下面的问题。"></a>方法：需要回答下面的问题。</h4><ul><li>问题是在哪里和怎样进入系统的？ </li><li>什么允许问题的发生？</li><li>为什么问题未被检测到？</li><li>从D2中展开的问题陈述开始，重复“为什么”？</li><li>一旦得到了根本原因，从每一个‘为什么’得到的答案将指引到允许初始问题发生的体制、系统、政策、程序等的缺陷处。</li><li>考虑专用工作表。</li></ul><h3 id="D8：表彰"><a href="#D8：表彰" class="headerlink" title="D8：表彰"></a>D8：表彰</h3><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="供方的报告必须回答下列问题"><a href="#供方的报告必须回答下列问题" class="headerlink" title="供方的报告必须回答下列问题"></a>供方的报告必须回答下列问题</h3><ul><li>问题是什么? (D2)</li><li>问题如何解决? (D3至D6)</li><li>将来该问题如何预防? (D7)</li></ul><h3 id="顾客将通过确认8D报告来决定这些问题是否已经回答"><a href="#顾客将通过确认8D报告来决定这些问题是否已经回答" class="headerlink" title="顾客将通过确认8D报告来决定这些问题是否已经回答"></a>顾客将通过确认8D报告来决定这些问题是否已经回答</h3><ul><li>对零件的知识进行了充分论证。</li><li>完全确定了根本原因并聚焦于该原因。</li><li>遗漏点已经被识别。</li><li>确定与根本相匹配的纠正措施。</li><li>纠正措施计划的验证已经被确定。 </li><li>包括了实施纠正措施的时间计划。</li><li>有证据显示供方将把纠正措施纳入整个系统</li></ul><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ol><li><a href="http://www.pinzhi.org/forum.php?mod=viewthread&tid=57">德国博世(BOSCH) 8D报告模版</a></li><li><a href="http://www.pinzhi.org/forum.php?mod=viewthread&tid=62843">博世(BOSCH)8D评估表</a></li><li><a href="http://www.pinzhi.org/forum.php?mod=viewthread&tid=63975">VDA 8D问题解决法红皮正式版(2018.11发布)</a></li><li><a href="http://www.pinzhi.org/forum.php?mod=viewthread&tid=57446">如果是人为错误如何来写8D报告，客户才能满意</a></li><li><a href="http://www.pinzhi.org/forum.php?mod=viewthread&tid=704">国际著名飞机公司8D报告</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;8D-方法&quot;&gt;&lt;a href=&quot;#8D-方法&quot; class=&quot;headerlink&quot; title=&quot;8D 方法&quot;&gt;&lt;/a&gt;8D 方法&lt;/h2&gt;&lt;h3 id=&quot;特点&quot;&gt;&lt;a href=&quot;#特点&quot; class=&quot;headerlink&quot; title=&quot;特点&quot;&gt;&lt;/a&gt;特</summary>
      
    
    
    
    <category term="质量管理" scheme="http://wyqhkhhk.github.io/categories/%E8%B4%A8%E9%87%8F%E7%AE%A1%E7%90%86/"/>
    
    <category term="8D报告" scheme="http://wyqhkhhk.github.io/categories/%E8%B4%A8%E9%87%8F%E7%AE%A1%E7%90%86/8D%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="8D" scheme="http://wyqhkhhk.github.io/tags/8D/"/>
    
    <category term="鱼骨图" scheme="http://wyqhkhhk.github.io/tags/%E9%B1%BC%E9%AA%A8%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>Git-Command</title>
    <link href="http://wyqhkhhk.github.io/2021/12/05/Git-Command/"/>
    <id>http://wyqhkhhk.github.io/2021/12/05/Git-Command/</id>
    <published>2021-12-05T02:51:31.000Z</published>
    <updated>2021-12-06T01:07:19.867Z</updated>
    
    <content type="html"><![CDATA[<p>本文转载自<a href="https://github.com/JourWon">JourWon</a> <a href="https://github.com/JourWon/git/commit/a411ff5ff10bba58c06de878ea6c2ec52bb68342">提交常用Git命令</a></p><h1 id="Git常用命令–Git-Command"><a href="#Git常用命令–Git-Command" class="headerlink" title="Git常用命令–Git Command"></a>Git常用命令–Git Command</h1><h2 id="git工作流程"><a href="#git工作流程" class="headerlink" title="git工作流程"></a>git工作流程</h2><p><img src="/img/hexo/1205/git%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png" alt="workflow"></p><p>说明：</p><ul><li>workspace：工作区</li><li>staging area：暂存区/缓存区</li><li>local repository：版本库或本地仓库</li><li>remote repository：远程仓库</li></ul><h2 id="配置用户名和邮箱"><a href="#配置用户名和邮箱" class="headerlink" title="配置用户名和邮箱"></a>配置用户名和邮箱</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git --version   <span class="comment"># 查看git的版本信息</span></span><br><span class="line">$ git config --global user.name   <span class="comment"># 获取当前登录的用户</span></span><br><span class="line">$ git config --global user.email  <span class="comment"># 获取当前登录用户的邮箱</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>登陆 <code>git</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果刚没有获取到用户配置，则只能拉取代码，不能修改  要是使用git，你要告诉git是谁在使用</span></span><br><span class="line">$ git config --global user.name <span class="string">&#x27;userName&#x27;</span>    <span class="comment"># 设置git账户，userName为你的git账号，</span></span><br><span class="line">$ git config --global user.email <span class="string">&#x27;email&#x27;</span></span><br><span class="line"><span class="comment"># 获取Git配置信息，执行以下命令：</span></span><br><span class="line">$ git config –list</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="配置https和ssh推送时保存用户名和密码"><a href="#配置https和ssh推送时保存用户名和密码" class="headerlink" title="配置https和ssh推送时保存用户名和密码"></a>配置https和ssh推送时保存用户名和密码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># https提交保存用户名和密码</span></span><br><span class="line">$ git config --global credential.helper store</span><br><span class="line"><span class="comment"># 生成公钥私钥，将公钥配置到GitHub，ssh提交就可以免输入用户名密码</span></span><br><span class="line"><span class="comment"># 三次回车即可生成 ssh key</span></span><br><span class="line">$ ssh-keygen -t rsa</span><br><span class="line"><span class="comment"># 查看已生成的公钥</span></span><br><span class="line">$ cat ~/.ssh/id_rsa.pub</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="推送到远程仓库正确流程"><a href="#推送到远程仓库正确流程" class="headerlink" title="推送到远程仓库正确流程"></a>推送到远程仓库正确流程</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1. git init <span class="comment"># 初始化仓库</span></span><br><span class="line">2. git add .(文件name) <span class="comment"># 添加文件到本地仓库</span></span><br><span class="line">3. git commit -m <span class="string">&quot;first commit&quot;</span> <span class="comment"># 添加文件描述信息</span></span><br><span class="line">4. git remote add origin 远程仓库地址 <span class="comment"># 链接远程仓库，创建主分支</span></span><br><span class="line">5. git pull origin master --allow-unrelated-histories <span class="comment"># 把本地仓库的变化连接到远程仓库主分支</span></span><br><span class="line">6. git push -u origin master <span class="comment"># 把本地仓库的文件推送到远程仓库</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文转载自&lt;a href=&quot;https://github.com/JourWon&quot;&gt;JourWon&lt;/a&gt; &lt;a href=&quot;https://github.com/JourWon/git/commit/a411ff5ff10bba58c06de878ea6c2ec52bb6</summary>
      
    
    
    
    <category term="Git教程" scheme="http://wyqhkhhk.github.io/categories/Git%E6%95%99%E7%A8%8B/"/>
    
    <category term="Git命令" scheme="http://wyqhkhhk.github.io/categories/Git%E6%95%99%E7%A8%8B/Git%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Git" scheme="http://wyqhkhhk.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>创建Git分支将Hexo博客迁移到其它电脑</title>
    <link href="http://wyqhkhhk.github.io/2021/12/05/%E5%88%9B%E5%BB%BA%20Git%20%E5%88%86%E6%94%AF%E5%B0%86%20Hexo%20%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E5%88%B0%E5%85%B6%E5%AE%83%E7%94%B5%E8%84%91/"/>
    <id>http://wyqhkhhk.github.io/2021/12/05/%E5%88%9B%E5%BB%BA%20Git%20%E5%88%86%E6%94%AF%E5%B0%86%20Hexo%20%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E5%88%B0%E5%85%B6%E5%AE%83%E7%94%B5%E8%84%91/</id>
    <published>2021-12-04T17:16:25.000Z</published>
    <updated>2021-12-06T01:07:19.868Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">介绍：GitHub+Hexo搭建博客的过程比较平滑，但是它的配置却非常耗时间，一旦电脑出现问题或者需要在另外一台电脑上写博客，那么Hexo博客的迁移非常就让人头疼。下面参考其他博客的方法，实现在不同电脑端维护网站配置</span><br></pre></td></tr></table></figure><h2 id="部署示意图"><a href="#部署示意图" class="headerlink" title="部署示意图"></a>部署示意图</h2><p><img src="/img/hexo/1205/Artboard.png"></p><h2 id="必备文件"><a href="#必备文件" class="headerlink" title="必备文件"></a>必备文件</h2><table><thead><tr><th align="left">文件（夹）</th><th>说明</th></tr></thead><tbody><tr><td align="left">scaffolds/</td><td>博客文章的模版</td></tr><tr><td align="left">source/</td><td>所有博客文章，以及about、tags、categories等page</td></tr><tr><td align="left">themes/</td><td>网站的主题</td></tr><tr><td align="left">.gitignore</td><td>在push时需要忽略的文件和文件夹</td></tr><tr><td align="left">_config.yml</td><td>站点配置文件</td></tr><tr><td align="left">package.json</td><td>依赖包的名称和版本号</td></tr></tbody></table><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><ol><li>安装<code>git</code></li><li>安装<code>nodejs</code></li><li>安装<code>hexo</code></li></ol><p>​    <strong>说明</strong>：以上配置请参照<a href="https://hexo.io/zh-cn/docs/"><code>hexo</code></a></p><h2 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h2><p><strong>根据示意图</strong></p><p>在<code>Github</code>的<code>username.github.io</code>仓库上新建一个<code>hexo</code>(分支名字可自定义)分支, 在下图箭头位置输入分支名字,完成创建</p><p><img src="/img/hexo/1205/0215.png" alt="0215"></p><p><strong>更改默认分支</strong>：</p><p>切换到该<code>hexo分支</code>，并在<code>该仓库-&gt;Settings-&gt;Branches-&gt;Default branch</code>中将默认分支设为<code>hexo</code>,然后点击<code>update</code>进行保存，更改教程看<a href="https://docs.github.com/cn/repositories/configuring-branches-and-merges-in-your-repository/managing-branches-in-your-repository/changing-the-default-branch">这里</a></p><h2 id="克隆分支"><a href="#克隆分支" class="headerlink" title="克隆分支"></a>克隆分支</h2><p>然后在本地的任意目录下，打开git bash</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:username/username.github.io.git</span><br></pre></td></tr></table></figure><p>将其克隆到本地，因为默认分支已经设成了<code>hexo</code>，所以<code>clone</code>时只<code>clone</code>了<code>hexo</code></p><p>接下来在克隆到本地的<code>username.github.io</code>中，把除了<code>.git</code> 文件夹外的所有文件都删掉</p><p>把之前我们写的博客源文件全部复制过来，除了<code>.deploy_git</code>。这里应该说一句，复制过来的源文件应该有一个<code>.gitignore</code>，用来忽略一些不需要的文件，如果没有的话，自己新建一个，在里面写上如下，表示这些类型文件不需要git：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure><p><strong>注意</strong>，如果你之前克隆过<code>theme</code>中的主题文件，那么应该把主题文件中的<code>.git</code>文件夹删掉，因为<code>git</code>不能嵌套上传，最好是显示隐藏文件，检查一下有没有，否则上传的时候会出错，导致你的主题文件无法上传，这样你的配置在别的电脑上就用不了了</p><h2 id="上传分支"><a href="#上传分支" class="headerlink" title="上传分支"></a>上传分支</h2><p>此时，你的 <code>username.github.io</code>文件夹内所有文件都已经准备完成</p><p>运行 <code>git bash</code> 执行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit –m <span class="string">&quot;initial commit&quot;</span></span><br><span class="line">git push </span><br></pre></td></tr></table></figure><p>这样就上传完了，可以去你的<code>github</code>上看一看<code>hexo</code>分支有没有上传上去，其中<code>node_modules</code>、<code>public</code>、<code>db.json</code>已经被忽略掉了，没有关系，不需要上传的，因为在别的电脑上需要重新输入命令安装</p><h2 id="更换电脑-环境配置"><a href="#更换电脑-环境配置" class="headerlink" title="更换电脑-环境配置"></a>更换电脑-环境配置</h2><ol><li><p>安装<code>git</code></p></li><li><p>设置<code>git</code>全局邮箱和用户名</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourgithubname&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;yourgithubemail&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>设置<code>ssh</code> <code>key</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;youremail&quot;</span></span><br><span class="line"><span class="comment">#生成后填到github和coding上（有coding平台的话）</span></span><br><span class="line"><span class="comment">#验证是否成功</span></span><br><span class="line">ssh -T git@github.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#返回  You&#x27;ve successfully authenticated  代表成功</span></span><br><span class="line"></span><br><span class="line">ssh -T git@git.coding.net <span class="comment">#(有coding平台的话)</span></span><br></pre></td></tr></table></figure></li><li><p>安装<code>nodejs</code></p></li><li><p>安装<code>hexo</code></p><p>但是已经不需要初始化了    </p><p>直接在任意文件夹下</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:username/username.github.io.git</span><br></pre></td></tr></table></figure></li></ol><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> username.github.io</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>生成，部署：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><p>提交流程：</p><p><img src="/img/hexo/1205/Artboard_1.png"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://www.jianshu.com/p/153490a029a5">迁移hexo到新电脑</a></li><li><a href="https://juejin.cn/post/6844903780664737806">GitHub + Hexo搭建自己博客(三) 多设备管理</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;介绍：GitHub+Hexo搭建博客的过程比较平滑，但是它的配置却非常耗时间，一旦电脑出现问题或者需要在</summary>
      
    
    
    
    <category term="hexo教程" scheme="http://wyqhkhhk.github.io/categories/hexo%E6%95%99%E7%A8%8B/"/>
    
    <category term="hexo多端登陆" scheme="http://wyqhkhhk.github.io/categories/hexo%E6%95%99%E7%A8%8B/hexo%E5%A4%9A%E7%AB%AF%E7%99%BB%E9%99%86/"/>
    
    
    <category term="hexo" scheme="http://wyqhkhhk.github.io/tags/hexo/"/>
    
    <category term="git" scheme="http://wyqhkhhk.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://wyqhkhhk.github.io/2021/11/30/hello-world/"/>
    <id>http://wyqhkhhk.github.io/2021/11/30/hello-world/</id>
    <published>2021-11-30T08:42:33.312Z</published>
    <updated>2021-11-30T05:44:29.899Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
