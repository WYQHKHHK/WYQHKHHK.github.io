<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WLSHARE</title>
  <icon>https://www.gravatar.com/avatar/0731094a53d226f5ba52b970ac58196c</icon>
  <subtitle>WLSHARE</subtitle>
  <link href="http://wyqhkhhk.github.io/atom.xml" rel="self"/>
  
  <link href="http://wyqhkhhk.github.io/"/>
  <updated>2021-12-05T06:44:05.401Z</updated>
  <id>http://wyqhkhhk.github.io/</id>
  
  <author>
    <name>Marvin</name>
    <email>sdpuwqq@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git-Command</title>
    <link href="http://wyqhkhhk.github.io/2021/12/05/Git-Command/"/>
    <id>http://wyqhkhhk.github.io/2021/12/05/Git-Command/</id>
    <published>2021-12-05T02:51:31.000Z</published>
    <updated>2021-12-05T06:44:05.401Z</updated>
    
    <content type="html"><![CDATA[<p>本文转载自<a href="https://github.com/JourWon">JourWon</a> <a href="https://github.com/JourWon/git/commit/a411ff5ff10bba58c06de878ea6c2ec52bb68342">提交常用Git命令</a></p><h1 id="Git常用命令–Git-Command"><a href="#Git常用命令–Git-Command" class="headerlink" title="Git常用命令–Git Command"></a>Git常用命令–Git Command</h1><h2 id="git工作流程"><a href="#git工作流程" class="headerlink" title="git工作流程"></a>git工作流程</h2><p><img src="/img/hexo/1205/git%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png" alt="workflow"></p><p>说明：</p><ul><li>workspace：工作区</li><li>staging area：暂存区/缓存区</li><li>local repository：版本库或本地仓库</li><li>remote repository：远程仓库</li></ul><h2 id="配置用户名和邮箱"><a href="#配置用户名和邮箱" class="headerlink" title="配置用户名和邮箱"></a>配置用户名和邮箱</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git --version   <span class="comment"># 查看git的版本信息</span></span><br><span class="line">$ git config --global user.name   <span class="comment"># 获取当前登录的用户</span></span><br><span class="line">$ git config --global user.email  <span class="comment"># 获取当前登录用户的邮箱</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>登陆 <code>git</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果刚没有获取到用户配置，则只能拉取代码，不能修改  要是使用git，你要告诉git是谁在使用</span></span><br><span class="line">$ git config --global user.name <span class="string">&#x27;userName&#x27;</span>    <span class="comment"># 设置git账户，userName为你的git账号，</span></span><br><span class="line">$ git config --global user.email <span class="string">&#x27;email&#x27;</span></span><br><span class="line"><span class="comment"># 获取Git配置信息，执行以下命令：</span></span><br><span class="line">$ git config –list</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="配置https和ssh推送时保存用户名和密码"><a href="#配置https和ssh推送时保存用户名和密码" class="headerlink" title="配置https和ssh推送时保存用户名和密码"></a>配置https和ssh推送时保存用户名和密码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># https提交保存用户名和密码</span></span><br><span class="line">$ git config --global credential.helper store</span><br><span class="line"><span class="comment"># 生成公钥私钥，将公钥配置到GitHub，ssh提交就可以免输入用户名密码</span></span><br><span class="line"><span class="comment"># 三次回车即可生成 ssh key</span></span><br><span class="line">$ ssh-keygen -t rsa</span><br><span class="line"><span class="comment"># 查看已生成的公钥</span></span><br><span class="line">$ cat ~/.ssh/id_rsa.pub</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="推送到远程仓库正确流程"><a href="#推送到远程仓库正确流程" class="headerlink" title="推送到远程仓库正确流程"></a>推送到远程仓库正确流程</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1. git init <span class="comment"># 初始化仓库</span></span><br><span class="line">2. git add .(文件name) <span class="comment"># 添加文件到本地仓库</span></span><br><span class="line">3. git commit -m <span class="string">&quot;first commit&quot;</span> <span class="comment"># 添加文件描述信息</span></span><br><span class="line">4. git remote add origin 远程仓库地址 <span class="comment"># 链接远程仓库，创建主分支</span></span><br><span class="line">5. git pull origin master --allow-unrelated-histories <span class="comment"># 把本地仓库的变化连接到远程仓库主分支</span></span><br><span class="line">6. git push -u origin master <span class="comment"># 把本地仓库的文件推送到远程仓库</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文转载自&lt;a href=&quot;https://github.com/JourWon&quot;&gt;JourWon&lt;/a&gt; &lt;a href=&quot;https://github.com/JourWon/git/commit/a411ff5ff10bba58c06de878ea6c2ec52bb6</summary>
      
    
    
    
    <category term="Git教程" scheme="http://wyqhkhhk.github.io/categories/Git%E6%95%99%E7%A8%8B/"/>
    
    <category term="Git命令" scheme="http://wyqhkhhk.github.io/categories/Git%E6%95%99%E7%A8%8B/Git%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Git" scheme="http://wyqhkhhk.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>创建Git分支将Hexo博客迁移到其它电脑</title>
    <link href="http://wyqhkhhk.github.io/2021/12/05/%E5%88%9B%E5%BB%BA%20Git%20%E5%88%86%E6%94%AF%E5%B0%86%20Hexo%20%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E5%88%B0%E5%85%B6%E5%AE%83%E7%94%B5%E8%84%91/"/>
    <id>http://wyqhkhhk.github.io/2021/12/05/%E5%88%9B%E5%BB%BA%20Git%20%E5%88%86%E6%94%AF%E5%B0%86%20Hexo%20%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E5%88%B0%E5%85%B6%E5%AE%83%E7%94%B5%E8%84%91/</id>
    <published>2021-12-04T17:16:25.000Z</published>
    <updated>2021-12-04T19:17:18.417Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">介绍：GitHub+Hexo搭建博客的过程比较平滑，但是它的配置却非常耗时间，一旦电脑出现问题或者需要在另外一台电脑上写博客，那么Hexo博客的迁移非常就让人头疼。下面参考其他博客的方法，实现在不同电脑端维护网站配置</span><br></pre></td></tr></table></figure><h2 id="部署示意图"><a href="#部署示意图" class="headerlink" title="部署示意图"></a>部署示意图</h2><p><img src="/img/hexo/1205/Artboard.png"></p><h2 id="必备文件"><a href="#必备文件" class="headerlink" title="必备文件"></a>必备文件</h2><table><thead><tr><th align="left">文件（夹）</th><th>说明</th></tr></thead><tbody><tr><td align="left">scaffolds/</td><td>博客文章的模版</td></tr><tr><td align="left">source/</td><td>所有博客文章，以及about、tags、categories等page</td></tr><tr><td align="left">themes/</td><td>网站的主题</td></tr><tr><td align="left">.gitignore</td><td>在push时需要忽略的文件和文件夹</td></tr><tr><td align="left">_config.yml</td><td>站点配置文件</td></tr><tr><td align="left">package.json</td><td>依赖包的名称和版本号</td></tr></tbody></table><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><ol><li>安装<code>git</code></li><li>安装<code>nodejs</code></li><li>安装<code>hexo</code></li></ol><p>​    <strong>说明</strong>：以上配置请参照<a href="https://hexo.io/zh-cn/docs/"><code>hexo</code></a></p><h2 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h2><p><strong>根据示意图</strong></p><p>在<code>Github</code>的<code>username.github.io</code>仓库上新建一个<code>hexo</code>(分支名字可自定义)分支, 在下图箭头位置输入分支名字,完成创建</p><p><img src="/img/hexo/1205/0215.png" alt="0215"></p><p><strong>更改默认分支</strong>：</p><p>切换到该<code>hexo分支</code>，并在<code>该仓库-&gt;Settings-&gt;Branches-&gt;Default branch</code>中将默认分支设为<code>hexo</code>,然后点击<code>update</code>进行保存，更改教程看<a href="https://docs.github.com/cn/repositories/configuring-branches-and-merges-in-your-repository/managing-branches-in-your-repository/changing-the-default-branch">这里</a></p><h2 id="克隆分支"><a href="#克隆分支" class="headerlink" title="克隆分支"></a>克隆分支</h2><p>然后在本地的任意目录下，打开git bash</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:username/username.github.io.git</span><br></pre></td></tr></table></figure><p>将其克隆到本地，因为默认分支已经设成了<code>hexo</code>，所以<code>clone</code>时只<code>clone</code>了<code>hexo</code></p><p>接下来在克隆到本地的<code>username.github.io</code>中，把除了<code>.git</code> 文件夹外的所有文件都删掉</p><p>把之前我们写的博客源文件全部复制过来，除了<code>.deploy_git</code>。这里应该说一句，复制过来的源文件应该有一个<code>.gitignore</code>，用来忽略一些不需要的文件，如果没有的话，自己新建一个，在里面写上如下，表示这些类型文件不需要git：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure><p><strong>注意</strong>，如果你之前克隆过<code>theme</code>中的主题文件，那么应该把主题文件中的<code>.git</code>文件夹删掉，因为<code>git</code>不能嵌套上传，最好是显示隐藏文件，检查一下有没有，否则上传的时候会出错，导致你的主题文件无法上传，这样你的配置在别的电脑上就用不了了</p><h2 id="上传分支"><a href="#上传分支" class="headerlink" title="上传分支"></a>上传分支</h2><p>此时，你的 <code>username.github.io</code>文件夹内所有文件都已经准备完成</p><p>运行 <code>git bash</code> 执行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit –m <span class="string">&quot;initial commit&quot;</span></span><br><span class="line">git push </span><br></pre></td></tr></table></figure><p>这样就上传完了，可以去你的<code>github</code>上看一看<code>hexo</code>分支有没有上传上去，其中<code>node_modules</code>、<code>public</code>、<code>db.json</code>已经被忽略掉了，没有关系，不需要上传的，因为在别的电脑上需要重新输入命令安装</p><h2 id="更换电脑-环境配置"><a href="#更换电脑-环境配置" class="headerlink" title="更换电脑-环境配置"></a>更换电脑-环境配置</h2><ol><li><p>安装<code>git</code></p></li><li><p>设置<code>git</code>全局邮箱和用户名</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourgithubname&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;yourgithubemail&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>设置<code>ssh</code> <code>key</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;youremail&quot;</span></span><br><span class="line"><span class="comment">#生成后填到github和coding上（有coding平台的话）</span></span><br><span class="line"><span class="comment">#验证是否成功</span></span><br><span class="line">ssh -T git@github.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#返回  You&#x27;ve successfully authenticated  代表成功</span></span><br><span class="line"></span><br><span class="line">ssh -T git@git.coding.net <span class="comment">#(有coding平台的话)</span></span><br></pre></td></tr></table></figure></li><li><p>安装<code>nodejs</code></p></li><li><p>安装<code>hexo</code></p><p>但是已经不需要初始化了    </p><p>直接在任意文件夹下</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:username/username.github.io.git</span><br></pre></td></tr></table></figure></li></ol><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> username.github.io</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>生成，部署：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><p>提交流程：</p><p><img src="/img/hexo/1205/Artboard_1.png"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://www.jianshu.com/p/153490a029a5">迁移hexo到新电脑</a></li><li><a href="https://juejin.cn/post/6844903780664737806">GitHub + Hexo搭建自己博客(三) 多设备管理</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;介绍：GitHub+Hexo搭建博客的过程比较平滑，但是它的配置却非常耗时间，一旦电脑出现问题或者需要在</summary>
      
    
    
    
    <category term="hexo教程" scheme="http://wyqhkhhk.github.io/categories/hexo%E6%95%99%E7%A8%8B/"/>
    
    <category term="hexo多端登陆" scheme="http://wyqhkhhk.github.io/categories/hexo%E6%95%99%E7%A8%8B/hexo%E5%A4%9A%E7%AB%AF%E7%99%BB%E9%99%86/"/>
    
    
    <category term="hexo" scheme="http://wyqhkhhk.github.io/tags/hexo/"/>
    
    <category term="git" scheme="http://wyqhkhhk.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://wyqhkhhk.github.io/2021/12/03/hello-world/"/>
    <id>http://wyqhkhhk.github.io/2021/12/03/hello-world/</id>
    <published>2021-12-03T09:12:20.134Z</published>
    <updated>2021-12-03T09:12:20.134Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
